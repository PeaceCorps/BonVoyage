extends layout

block styles
	link(rel='stylesheet', href='/css/approval.css')
	link(href='/css/selectize.css', rel='stylesheet')
	link(href='/css/selectize.bootstrap3.css', rel='stylesheet')
	link(rel='stylesheet', href='/css/awesome-bootstrap-checkbox.css')
	
block content
	.row
		.col-xs-12.col-md-offset-1.col-md-10

			.jumbotron
				h2 Request Overview

				include flash
				
				#request
					h2 Volunteer 
					.shadow-box
						p
							span 
								b Name: 
							span= request.volunteer.name
						p
							span 
								b Email: 
							span= (request.volunteer.email ? request.volunteer.email : "No email on file.")
						p
							span 
								b Phone(s): 
							span.phones= (request.volunteer.phones && request.volunteer.phones.length > 0 ? request.volunteer.phones.join(', ') : "No phone on file.")
					h2 Assigned Reviewer
					.shadow-box
						if request.reviewer
							p
								span 
									b Name: 
								span= request.reviewer.name
							p
								span 
									b Email: 
								span= (request.reviewer.email ? request.reviewer.email : "No email on file.")
							p
								span 
									b Phone(s): 
								span.phones= (request.reviewer.phones && request.reviewer.phones.length > 0 ? request.reviewer.phones.join(', ') : "No phone on file.")
						else
							p None. Assign a member 
								a.editLink(href='#') here.
					h2 Trip Itinerary
					.shadow-box
						each leg in request.legs
							p
								span.date(data-unformatted="#{leg.startDate}")
								span  - 
								span.date(data-unformatted="#{leg.endDate}")
								span : #{leg.city}, #{leg.country}
							p
								span
									b Hotel/Hostel info: 
								span= (leg.hotel ? leg.hotel : "No description on file.")
							p
								span
									b Travel contact: 
								span= (leg.contact ? leg.contact : "No description on file.")
							p
								span
									b Companions: 
								span= (leg.companions ? leg.companions : "No description on file.")
							p 
								span
									b Description: 
								span= (leg.description ? leg.description : "No description on file.")
							each warning in leg.warnings
								.warning.alert(role='alert', class=warning.colorClass)
									span.glyphicon.glyphicon-exclamation-sign(aria-hidden='true')
									span
										b #{warning.source} - #{warning.type}: 
									span= warning.textOverview + " "
									span
										b
											a(target="_blank" rel="noopener noreferrer" href=warning.link) More Information
						br
						p
							span
								b Counterpart Approval: 
							span= (request.counterpartApproved == true ? "Approved." : "Not yet approved.")
					h2 Comments #{(request.comments.length > 0 ? "(" + request.comments.length + ")" : "")}
					.shadow-box
						#comments
							each comment in request.comments
								.comment
									p
										span
											b Name: 
										span= comment.name
									p
										span
											b Time: 
										span.timestamp(data-unformatted="#{comment.timestamp}")
									p
										span
											b Comment: 
										span= comment.content
						
						textarea.form-control#new-comment(rows=3, onkeyup="commentStoppedTyping()", name="content")
						button.btn.btn-default.disabled#submit-comment Submit Comment
					//- Approval Form
					if (request.reviewer && user._id.equals(request.reviewer._id) && user.access >= 1)
						h2 Approval Form
						#approval.shadow-box
							//- Mark Approval
							p
								b Mark as...
							.checkbox.checkbox-warning.useiconpending
								input(type="radio", name="approval", id="pendingCheckbox", checked)
								label(for='pendingCheckbox')
									p Leave Pending
							.checkbox.checkbox-success
								input(type="radio", name="approval", id="approvalCheckbox")
								label(for='approvalCheckbox', id="approvalCheckboxLabel")
									p Approved
							.checkbox.checkbox-danger.useicondenied
								input(type="radio", name="approval", id="denialCheckbox")
								label(for='denialCheckbox')
									p Denied
							//- Re-assign
							#reviewer
								p
									b Assign a New Reviewer
								select.form-control#selectReviewer(placeholder='Loading...')
							//- Add Comment
							p
								b Add an Explanation
							textarea.form-control#explanation(rows=3, placeholder='Comment (optional)')
							//- Submit
							button#request-approval-btn.btn.btn-warning(type='button')
								span.fa.fa-paper-plane
								|  Reassign and Comment
				// If staff or higher
				//- if user && user.access > 0
				//- 	#request_approval.row
				//- 		.col-xs-6
				//- 			button(class="btn btn-success" + (request.status.isPending == false && request.status.isApproved ? " disabled" : ""), id="request-approve-btn") Approve
				//- 		.col-xs-6
				//- 			button(class="btn btn-danger" + (request.status.isPending == false && !request.status.isApproved ? " disabled" : ""), id="request-deny-btn") Deny

				if user && (user.email == request.volunteer.email || user.access >= 1)
					.row
						div#request_edit(class=((user.email == request.volunteer.email || user.access >= 2) ? 'col-xs-6' : 'col-xs-12'))
							a(href="/requests/#{request._id}/edit")
								button(class="btn btn-warning", type='button', id="request-edit-btn") 
									span.glyphicon.glyphicon-pencil 
									|  Edit Request
						// If the user is the owner of the request (or a staff)
						if (user.email == request.volunteer.email || user.access >= 2)
							#request_delete.col-xs-6
								button(class="btn btn-danger", type='button', id="request-delete-btn")
									span.glyphicon.glyphicon-trash 
									|  Delete Request

block scripts
	script.
		var volunteer = !{JSON.stringify(request.volunteer)};
		var reviewer = !{JSON.stringify(request.reviewer)};
		//- var currentUser = !{JSON.stringify(user)};
	script(src='/js/moment.js')
	script(src='/js/selectize.min.js')
	script(src='/js/utils.js')
	script(src='/js/approval.js')
